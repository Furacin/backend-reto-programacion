<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.autentia.catalogocursos</groupId>
	<artifactId>spring-boot-mybatis</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-boot-mybatis</name>
	<description>Demo project for Spring Boot and Mybatis</description>

	<properties>
		<java.version>1.11</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<postgresql.version>42.2.5</postgresql.version>

		<docker-maven-plugin.version>0.34.1</docker-maven-plugin.version>
		<it.postgresql.image>postgres:10-alpine</it.postgresql.image>
		<it.postgresql.host>localhost</it.postgresql.host>
		<it.postgresql.port>5432</it.postgresql.port>
		<it.postgresql.db>archimedes</it.postgresql.db>
		<it.postgresql.password>verysecret</it.postgresql.password>

	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>2.1.3</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
<!--			<exclusions>-->
<!--				<exclusion>-->
<!--					<groupId>org.junit.vintage</groupId>-->
<!--					<artifactId>junit-vintage-engine</artifactId>-->
<!--				</exclusion>-->
<!--			</exclusions>-->
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>2.3.8</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.12</version>
		</dependency>
	</dependencies>

	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub Packages</name>
			<url>https://maven.pkg.github.com/furazin/backend-reto-programacion</url>
		</repository>
	</distributionManagement>


	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker-maven-plugin.version}</version>
					<configuration>
						<images>
							<image>
								<name>${it.postgresql.image}</name>
								<run>
									<ports>
										<port>${it.postgresql.port}:5432</port>
									</ports>
									<env>
										<POSTGRES_PASSWORD>${it.postgresql.password}</POSTGRES_PASSWORD>
										<POSTGRES_DB>${it.postgresql.db}</POSTGRES_DB>
									</env>
									<wait>
										<log>database system is ready to accept connections</log>
									</wait>
								</run>
							</image>
						</images>
					</configuration>
					<executions>
						<execution>
							<id>start</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>start</goal>
							</goals>
						</execution>
						<execution>
							<id>stop</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>


		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>


</project>
