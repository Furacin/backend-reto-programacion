# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build and Publish package to the Maven Central Repository

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      docker-build:
        image: docker:dind

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github

    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository/
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with maven
      run: mvn -B package --file pom.xml

    - name: Publish package to github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        MAVEN_CLI_OPTS: "--batch-mode"
        MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
        DOCKER_HOST: tcp://docker:2376
        DOCKER_TLS_CERTDIR: /certs
        DOCKER_CERT_PATH: /certs/client
        DOCKER_TLS_VERIFY: 1
        DOCKER_DRIVER: overlay2
      run: mvn $MAVEN_CLI_OPTS clean deploy -Dit.postgresql.host=docker-build

    - uses: actions/upload-artifact@v2
      with:
        name: build
        path: |
          target/
          **/target/**
